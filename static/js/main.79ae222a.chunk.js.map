{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/contacts/EditContact.js","components/contacts/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","response","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","name","onDeleteClick","a","async","delete","res","email","phone","className","onClick","e","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","preventDefault","newContact","uuid","post","history","push","target","About","EditContact","match","params","updContact","put","console","log","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79ae222a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\nimport { act } from 'react-dom/test-utils';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action) =>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n                return {\r\n                    ...state,\r\n                    contacts: state.contacts.filter(contact=>\r\n                    contact.id !== action.payload)\r\n                };            \r\n                case 'ADD_CONTACT':\r\n                    return {\r\n                        ...state,\r\n                        contacts: [action.payload, ...state.contacts]\r\n                    };   \r\n              case 'UPDATE_CONTACT' :\r\n              return {\r\n                ...state,\r\n                contacts : state.contacts.map(contact =>\r\n                    contact.id === action.payload.id \r\n                    ? (contact = action.payload)\r\n                    :  contact\r\n                )\r\n              };\r\n            default: return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n\r\n   async componentDidMount(){\r\n        await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => this.setState({\r\n            contacts: response.data\r\n        }));\r\n    }\r\n    state ={\r\n        contacts : [\r\n        //     {\r\n        //         id: uuid(),\r\n        //         name: \"John Doe\",\r\n        //         email : \"jdoe@gmail.com\",\r\n        //         phone : \"555-555-5555\"\r\n        //     },\r\n        //     {\r\n        //        id: uuid(),\r\n        //        name: \"Karen willims\",\r\n        //        email : \"kwillims@gmail.com\",\r\n        //        phone : \"444-444-4444\"\r\n        //    },\r\n        //    {\r\n        //        id: uuid(),\r\n        //        name: \"Henry Johnson\",\r\n        //        email : \"hjohnson@gmail.com\",\r\n        //        phone : \"333-333-3333\"\r\n        //    }\r\n        ],\r\n        dispatch : action =>\r\n            this.setState(state => reducer(state,action))   \r\n    };\r\n        render(){\r\n            return(\r\n                <Context.Provider value = {this.state}>\r\n                    {this.props.children}\r\n                </Context.Provider>\r\n            )\r\n        }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nclass Contact extends Component {\r\n    state ={showContactInfo : false};\r\n    onShowClick =(name) =>{\r\n        this.setState({showContactInfo : !this.state.showContactInfo})\r\n    }\r\n    onDeleteClick = async (id, dispatch)=>{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            .then( res=> dispatch({type:'DELETE_CONTACT', payload:id}));\r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        const {id,name,email,phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n            {value=>{\r\n                const {dispatch} = value;\r\n                return(\r\n            <div className= \"card card-body mb-3\">\r\n                <h4>{name} {' '}<i \r\n                onClick = { e => this.onShowClick(name)} \r\n                className =\"fas fa-sort-down\" \r\n                style={{cursor: 'pointer' }}/>\r\n                 <i className =\"fas fa-times\" \r\n                 style={{ cursor : 'pointer', float: 'right', color:'red'}}\r\n                 onClick = {this.onDeleteClick.bind(this,id,dispatch)}\r\n                 ></i>\r\n                 <Link to = {`contact/edit/${id}`}>\r\n                    <i className =\"fas fa-pencil-alt\" \r\n                    style={{ cursor : 'pointer', float: 'right', color:'black', marginRight:'1rem'}}\r\n                 ></i></Link>\r\n                </h4>\r\n                {showContactInfo ? (\r\n                <ul className = \"list-group\">\r\n                    <li className = \"list-group-item\">{email}</li>\r\n                    <li className = \"list-group-item\">{phone}</li>\r\n                </ul>):null}\r\n            </div>\r\n                )\r\n            }}\r\n            </Consumer>\r\n            \r\n        );\r\n    }\r\n}\r\nContact.propTypes ={\r\n    contact : PropTypes.object.isRequired\r\n}\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n class Contacts extends Component {\r\n \r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return(\r\n                <React.Fragment>\r\n                    {contacts.map(contact => (\r\n                        <Contact\r\n                        key={contact.id}\r\n                        contact = {contact}\r\n                       \r\n                        />\r\n                    ))}\r\n                </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = props =>{\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-5m \r\n        navbar-dark bg-danger mb-3 py0\">\r\n    <div className= \"conttainer\">\r\n    <a href=\"/\" className =\"navbar-brand\">{branding}</a>\r\n    <div>\r\n        <ul className =\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link to =\"/\" className=\"nav-link\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to =\"/contact/add\" className=\"nav-link\">Add</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to =\"/contact/edit/:id\" className=\"nav-link\">Edit</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to =\"/about\" className=\"nav-link\">About</Link>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n        </nav>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup = ({label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,error }) =>{\r\n    return (\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type= {type}\r\n        name = {name}\r\n        className= {classnames(\"form-control form-control-lg\",{\r\n            \"is-invalid\" : error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}/>\r\n        {\r\n            error && <div className=\"invalid-feedback\">{error}</div>\r\n        }\r\n       \r\n    </div>\r\n    \r\n    )\r\n\r\n\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nclass AddContact extends Component {\r\nstate = {\r\n    name: '',\r\n    email: '',\r\n    phone :'',\r\n    errors :[]\r\n}\r\nonSubmit= async (dispatch,e) =>{\r\n    e.preventDefault();\r\n    const {name,email,phone} = this.state;\r\n\r\n    if(name === ''){\r\n        this.setState({errors : {    name: 'Name is required'} });\r\n        return;\r\n\r\n    }\r\n\r\n    if(email === ''){\r\n        this.setState({errors : {    email: 'Email is required'} });\r\n        return;\r\n            }\r\n\r\n            if(phone === ''){\r\n                this.setState({errors : {    phone: 'Phone is required'} });\r\n                return;\r\n                \r\n                    }\r\n    const newContact = {\r\n        id : uuid(),\r\n        name,\r\n        email,\r\n        phone\r\n    }\r\n\r\n    await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n    .then(res=> dispatch({type:'ADD_CONTACT', payload:newContact}));\r\n   // console.log(newContact);\r\n\r\n    this.setState({\r\n        name :'',\r\n        email:'',\r\n        phone : '',\r\n        errors : []\r\n    });\r\n    this.props.history.push('/');\r\n}\r\n\r\nonChange = e=> this.setState({[e.target.name]: e.target.value})\r\n    render() {\r\n        const { name,email,phone, errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const {dispatch} = value;\r\n                        return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup\r\n                                label =\"Name\"\r\n                                name = \"name\"\r\n                                value = {name}\r\n                                placeholder =\"Enter Name...\"\r\n                                type =\"text\"\r\n                               onChange = {this.onChange}\r\n                               error = {errors.name}\r\n                                />\r\n                               <TextInputGroup\r\n                                label =\"Email\"\r\n                                name = \"email\"\r\n                                value = {email}\r\n                                placeholder =\"Enter Email...\"\r\n                                type =\"email\"\r\n                               onChange = {this.onChange}\r\n                               error = {errors.email}\r\n                                />\r\n                               <TextInputGroup\r\n                                label =\"Phone\"\r\n                                name = \"phone\"\r\n                                value = {phone}\r\n                                placeholder =\"Enter Phone...\"\r\n                                type =\"text\"\r\n                               onChange = {this.onChange}\r\n                               error = {errors.phone}\r\n                                />\r\n                                <input type=\"submit\" value=\"Add Contact\"\r\n                                className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>)\r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\nexport default AddContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1>About page</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nclass EditContact extends Component {\r\nstate = {\r\n    name: '',\r\n    email: '',\r\n    phone :'',\r\n    errors :[]\r\n}\r\n\r\nasync componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    const res =  await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n     const contact = res.data;\r\n     console.log(res.data);\r\n     this.setState({\r\n       name : contact.name,\r\n       email : contact.email,\r\n       phone : contact.phone\r\n     });\r\n };\r\nonSubmit= async (dispatch,e) =>{\r\n    e.preventDefault();\r\n    const {name,email,phone} = this.state;\r\n\r\n    if(name === ''){\r\n        this.setState({errors : {    name: 'Name is required'} });\r\n        return;\r\n\r\n    }\r\n\r\n    if(email === ''){\r\n        this.setState({errors : {    email: 'Email is required'} });\r\n        return;\r\n            }\r\n\r\n            if(phone === ''){\r\n                this.setState({errors : {    phone: 'Phone is required'} });\r\n                return;\r\n                \r\n                    }\r\n\r\n      const { id } = this.props.match.params;\r\n\r\n      const updContact = {\r\n          name,\r\n          email,\r\n          phone\r\n      }\r\n\r\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n      dispatch({type:'UPDATE_CONTACT', payload : res.data});\r\n\r\n\r\n    this.setState({\r\n        name :'',\r\n        email:'',\r\n        phone : '',\r\n        errors : []\r\n    });\r\n    this.props.history.push('/');\r\n}\r\n\r\nonChange = e=> this.setState({[e.target.name]: e.target.value})\r\n    render() {\r\n        const { name,email,phone, errors} = this.state;\r\n        \r\n        return(\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const {dispatch} = value;\r\n                        return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup\r\n                                label =\"Name\"\r\n                                name = \"name\"\r\n                                value = {name}\r\n                                placeholder =\"Enter Name...\"\r\n                                type =\"text\"\r\n                               onChange = {this.onChange}\r\n                               error = {errors.name}\r\n                                />\r\n                               <TextInputGroup\r\n                                label =\"Email\"\r\n                                name = \"email\"\r\n                                value = {email}\r\n                                placeholder =\"Enter Email...\"\r\n                                type =\"email\"\r\n                               onChange = {this.onChange}\r\n                               error = {errors.email}\r\n                                />\r\n                               <TextInputGroup\r\n                                label =\"Phone\"\r\n                                name = \"phone\"\r\n                                value = {phone}\r\n                                placeholder =\"Enter Phone...\"\r\n                                type =\"text\"\r\n                               onChange = {this.onChange}\r\n                               error = {errors.phone}\r\n                                />\r\n                                <input type=\"submit\" value=\"Update Contact\"\r\n                                className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>)\r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\nexport default EditContact;","import React from 'react'\r\n\r\n  function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1>Page Not Found - 404</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFound;\r\n","import React from 'react';\nimport { HashRouter as Router, Switch , Route } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from './context';\nimport About from './components/pages/About';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/contacts/NotFound';\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n    <div className=\"App\">\n      <h1>The App Component</h1>\n      <Header branding = \"Contact Manager\"/> \n      <div className=\"container\">  \n      <Switch >\n        <Route exact path =\"/\" component = {Contacts}></Route>\n        <Route exact path =\"/about\" component = {About}></Route>\n        <Route exact path =\"/contact/add\" component = {AddContact}></Route>\n        <Route exact path =\"/contact/edit/:id\" component = {EditContact}></Route>\n        <Route  component = {NotFound}></Route>\n      </Switch>\n      </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}